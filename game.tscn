[gd_scene load_steps=20 format=3 uid="uid://co0ub2gyy2e1i"]

[ext_resource type="PackedScene" uid="uid://d20qj02giwrsk" path="res://entities/character.tscn" id="1_2vaq0"]
[ext_resource type="Script" path="res://Plank.gd" id="2_b8nrx"]
[ext_resource type="Script" path="res://Camera2D.gd" id="2_dbve3"]
[ext_resource type="PackedScene" uid="uid://bkfqlew2irmva" path="res://entities/spawner.tscn" id="3_ysj0m"]
[ext_resource type="Script" path="res://DebugContainer.gd" id="4_2q6mj"]
[ext_resource type="Script" path="res://BounceBar.gd" id="6_fxx7k"]

[sub_resource type="SphereMesh" id="SphereMesh_4adld"]
radius = 10.0
height = 20.0

[sub_resource type="BoxMesh" id="BoxMesh_ko8uv"]
size = Vector3(260, 4, 8)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_4qxbs"]
size = Vector2(65, 4)

[sub_resource type="BoxMesh" id="BoxMesh_hfyjh"]
size = Vector3(130, 4, 4)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_e57qh"]
size = Vector2(130, 4)

[sub_resource type="WorldBoundaryShape2D" id="WorldBoundaryShape2D_l2jq7"]

[sub_resource type="BoxMesh" id="BoxMesh_415c1"]
size = Vector3(16, 32, 16)

[sub_resource type="BoxMesh" id="BoxMesh_3uc8x"]
size = Vector3(18, 34, 18)

[sub_resource type="Animation" id="Animation_py4ib"]
resource_name = "fail"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("HSlider/Marker:rotation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.488692, -0.349066, 0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("HSlider/Marker:modulate")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.15, 0.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0.32549), Color(1, 0, 0.0166664, 0.32549), Color(1, 1, 1, 0.32549)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("HSlider/Marker:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.15, 0.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(0.8, 0.8), Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_5bpt6"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("HSlider/Marker:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("HSlider/Marker:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0.32549)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("HSlider/Marker:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("HSlider/Marker/Marker2:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_bpp25"]
resource_name = "success"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("HSlider/Marker:rotation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.366519, 0.314159, 0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("HSlider/Marker:modulate")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.15, 0.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0.32549), Color(0.416429, 0.601728, 0.151407, 0.32549), Color(1, 1, 1, 0.32549)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("HSlider/Marker:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.15, 0.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.1, 1.1), Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_ewphy"]
resource_name = "perfect"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("HSlider/Marker:rotation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.0872665, 0.0523599, 0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("HSlider/Marker:modulate")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.15, 0.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0.32549), Color(0.416429, 0.601728, 0.151407, 0.32549), Color(1, 1, 1, 0.32549)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("HSlider/Marker:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.15, 0.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(2, 2), Vector2(1, 1)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("HSlider/Marker/Marker2:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [false, true, true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_lb006"]
_data = {
"RESET": SubResource("Animation_5bpt6"),
"fail": SubResource("Animation_py4ib"),
"perfect": SubResource("Animation_ewphy"),
"success": SubResource("Animation_bpp25")
}

[node name="Game" type="Node2D"]

[node name="CharacterBase" parent="." instance=ExtResource("1_2vaq0")]
position = Vector2(0, -24)
status = 6
left_side = true

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(0, -256)
script = ExtResource("2_dbve3")

[node name="Balance" type="Node2D" parent="."]
position = Vector2(0, -14)

[node name="Circle" type="MeshInstance2D" parent="Balance"]
position = Vector2(0, 3)
mesh = SubResource("SphereMesh_4adld")

[node name="Plank" type="StaticBody2D" parent="Balance"]
position = Vector2(0, -10)
script = ExtResource("2_b8nrx")

[node name="Mesh" type="MeshInstance2D" parent="Balance/Plank"]
mesh = SubResource("BoxMesh_ko8uv")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Balance/Plank"]
position = Vector2(-97.5, 0)
shape = SubResource("RectangleShape2D_4qxbs")

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Balance/Plank"]
position = Vector2(97.5, 0)
shape = SubResource("RectangleShape2D_4qxbs")

[node name="MiddlePlank" type="StaticBody2D" parent="Balance/Plank"]

[node name="MeshInstance2D" type="MeshInstance2D" parent="Balance/Plank/MiddlePlank"]
modulate = Color(0.943446, 0, 0.159984, 1)
mesh = SubResource("BoxMesh_hfyjh")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Balance/Plank/MiddlePlank"]
shape = SubResource("RectangleShape2D_e57qh")

[node name="Floor" type="StaticBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Floor"]
shape = SubResource("WorldBoundaryShape2D_l2jq7")

[node name="SpawnerRight" parent="." instance=ExtResource("3_ysj0m")]
position = Vector2(300, -3)
left_side = false

[node name="SpawnerLeft" parent="." instance=ExtResource("3_ysj0m")]
position = Vector2(-300, 0)

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="DebugContainer" type="CenterContainer" parent="CanvasLayer"]
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -26.5
offset_right = 26.5
offset_bottom = 40.0
grow_horizontal = 2
script = ExtResource("4_2q6mj")

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/DebugContainer"]
layout_mode = 2

[node name="BoostMultiplicator" type="Label" parent="CanvasLayer/DebugContainer/VBoxContainer"]
layout_mode = 2
text = "Boost :"

[node name="BoostValue" type="Label" parent="CanvasLayer/DebugContainer/VBoxContainer"]
layout_mode = 2
text = "Boost :"

[node name="ActionTimeElapsed" type="Label" parent="CanvasLayer/DebugContainer/VBoxContainer"]
layout_mode = 2
text = "Boost :"

[node name="TimeScaleStopTime" type="Label" parent="CanvasLayer/DebugContainer/VBoxContainer"]
layout_mode = 2
text = "Boost :"

[node name="BoostStatus" type="Label" parent="CanvasLayer/DebugContainer/VBoxContainer"]
layout_mode = 2
text = "Boost :"

[node name="BounceBar" type="CenterContainer" parent="CanvasLayer"]
custom_minimum_size = Vector2(1024, 64)
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -20.0
offset_top = -40.0
offset_right = 20.0
grow_horizontal = 2
grow_vertical = 0
size_flags_horizontal = 3
script = ExtResource("6_fxx7k")

[node name="HSlider" type="HSlider" parent="CanvasLayer/BounceBar"]
custom_minimum_size = Vector2(256, 64)
layout_mode = 2
min_value = -200.0
max_value = 200.0
step = 0.1
value = -50.0

[node name="Marker" type="MeshInstance2D" parent="CanvasLayer/BounceBar/HSlider"]
modulate = Color(1, 1, 1, 0.32549)
position = Vector2(128, 32)
mesh = SubResource("BoxMesh_415c1")

[node name="Marker2" type="MeshInstance2D" parent="CanvasLayer/BounceBar/HSlider/Marker"]
visible = false
modulate = Color(1, 1, 0, 1)
show_behind_parent = true
mesh = SubResource("BoxMesh_3uc8x")

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer/BounceBar"]
libraries = {
"": SubResource("AnimationLibrary_lb006")
}

[node name="MultiMeshInstance2D" type="MultiMeshInstance2D" parent="."]
